[{"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\App.js":"1","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\reportWebVitals.js":"2","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Try.js":"3","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\Footer.js":"4","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\BrandIcon.js":"5","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\Terms.js":"6","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\List.js":"7","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\EmailSignUp.js":"8","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\Product.js":"9","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\Advert.js":"10","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\Routes.js":"11","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\ViewProduct.js":"12","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\index.js":"13","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\Products.js":"14","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\LeftImages.js":"15","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\Image.js":"16","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\ProductDetails.js":"17","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\MyProvider.js":"18","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Checkout\\Checkout.js":"19","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Checkout\\ListItems.js":"20","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\TopNav.js":"21","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\Nav.js":"22","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\BottomNav.js":"23","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\MyContext.js":"24"},{"size":232,"mtime":1610913037316,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1610674905529,"results":"27","hashOfConfig":"26"},{"size":317,"mtime":1610801530995,"results":"28","hashOfConfig":"26"},{"size":3235,"mtime":1610965857704,"results":"29","hashOfConfig":"26"},{"size":1412,"mtime":1610707807717,"results":"30","hashOfConfig":"26"},{"size":2049,"mtime":1610965322644,"results":"31","hashOfConfig":"26"},{"size":532,"mtime":1610711925642,"results":"32","hashOfConfig":"26"},{"size":1550,"mtime":1610718169828,"results":"33","hashOfConfig":"26"},{"size":1162,"mtime":1611070743769,"results":"34","hashOfConfig":"26"},{"size":2672,"mtime":1610964833190,"results":"35","hashOfConfig":"26"},{"size":692,"mtime":1610968992353,"results":"36","hashOfConfig":"26"},{"size":2129,"mtime":1611072136351,"results":"37","hashOfConfig":"26"},{"size":500,"mtime":1610674905529,"results":"38","hashOfConfig":"26"},{"size":668,"mtime":1611070830235,"results":"39","hashOfConfig":"26"},{"size":723,"mtime":1610962832397,"results":"40","hashOfConfig":"26"},{"size":723,"mtime":1610963367246,"results":"41","hashOfConfig":"26"},{"size":6539,"mtime":1610998322299,"results":"42","hashOfConfig":"26"},{"size":11186,"mtime":1611085709155,"results":"43","hashOfConfig":"26"},{"size":1395,"mtime":1611081008466,"results":"44","hashOfConfig":"26"},{"size":6437,"mtime":1611060816582,"results":"45","hashOfConfig":"26"},{"size":3470,"mtime":1611081728609,"results":"46","hashOfConfig":"26"},{"size":1230,"mtime":1611085324223,"results":"47","hashOfConfig":"26"},{"size":3414,"mtime":1611085763221,"results":"48","hashOfConfig":"26"},{"size":99,"mtime":1610909111448,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18zb9fd",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\App.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\reportWebVitals.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Try.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\Footer.js",[],["104","105"],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\BrandIcon.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\Terms.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\List.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\EmailSignUp.js",[],["106","107"],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\Product.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\Advert.js",["108","109"],"import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function Advert(props){\r\n    const {child, className} = props;\r\n    function onClickItem(item){\r\n        localStorage.setItem('item', JSON.stringify(item));\r\n        window.location = `/viewproduct`;\r\n    }\r\n\r\n    let listItems = child.map((item, index)=>{\r\n        let image = item.allImages;\r\n        return (\r\n            <div className=\"col-3 col-l-4 col-m-6 col-s-12 padding-all-10\" key={index.toString()}>\r\n                <div className=\"width-100 overflow-hidden flex-column align-items-center relative p-item\">\r\n                    <div className=\"width-100 height-60 relative\" data-status={true}>\r\n                        {\r\n                            image.map((item, index)=>{\r\n                                if(index <=1){\r\n                                    return (\r\n                                        <React.Fragment key={index.toString()}>\r\n                                            <div className={index === 0 ? \"absolute full product\": \"absolute full product img-item\"} style={{backgroundImage: \"url(\"+item+\")\" }}></div>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n                    \r\n                    <div className=\"absolute p-child bottom-10 white-bg round-5 padding-all-5 amali-blue font-gotham\">\r\n                        <NavLink to={`/viewproduct/${item.id}`}>QUICK VIEW</NavLink>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"font-roboto amali-blue left-text\">{item.name}</div>\r\n                <div className=\"font-gotham amali-blue left-text\">${item.price}</div>\r\n            </div>\r\n        );\r\n    });\r\n    return (\r\n        <div>\r\n            <div className={className ? className : 'row'}>\r\n                <div className=\"col-3 col-l-12 col-m-12 col-s-12 padding-all-10 flex-column white-text justify-content-center align-items-center1 amali-blueBg\">\r\n                    <div className=\"width-90 margin-auto center-text\">\r\n                        <div className=\"font-gotham font-40 font-lx-30 font-l-30 font-m-30 font-s-30 uppercase\">same day delivery is here!</div>\r\n                        <div><i className=\"fas fa-shopping-cart font-30\"></i></div>\r\n                        <div className=\"font-gothic\">*Available to customers within 10miles of a retail store</div>\r\n                    </div>\r\n                </div>\r\n                {listItems}\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\Routes.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\ViewProduct.js",[],["110","111"],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\index.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\Products.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\LeftImages.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\Image.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Products\\ProductDetails.js",["112","113"],"import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass ProductDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            item: this.props.item,\r\n            selectedSize: '',\r\n            qty: 1,\r\n        };\r\n    }\r\n\r\n    onClick(e){\r\n        document.querySelectorAll('.size-list').forEach(item=>{\r\n            if(item.classList.contains('active')){\r\n                item.classList.remove('active');\r\n            }\r\n        });\r\n        e.target.classList.add('active');\r\n        this.setState({selectedSize: e.target.innerHTML});\r\n    }\r\n\r\n    onPlus(){\r\n        this.setState({qty: ++this.state.qty});\r\n    }\r\n\r\n    onMinus(){\r\n        this.state.qty === 1 ? this.setState({qty: 1}) : this.setState({qty: --this.state.qty});\r\n    }\r\n\r\n    onChange(e){\r\n        if(e.target.value !== ''){\r\n            this.setState({qty: e.target.value});\r\n            setTimeout(()=>{\r\n                let num = '';\r\n                this.state.qty.split('').forEach((item, index)=>{\r\n                    num = num + item;\r\n                    if(isNaN(item)){\r\n                        num = num.split('');\r\n                        num.length = num.length > 1 ? num.length - 1 : num.length;\r\n                        if(num.length === 1){\r\n                            this.setState({qty: 1});\r\n                        }else{\r\n                            let numb = '';\r\n                            num.forEach(item=>{\r\n                                numb = numb + item;\r\n                            });\r\n                            numb = parseInt(numb);\r\n                            this.setState({qty: numb});\r\n                        }\r\n                    }\r\n                });\r\n            },);\r\n        }\r\n        setTimeout(()=>{\r\n            if(parseInt(this.state.qty) === 0){\r\n                this.setState({qty: 1});\r\n            }\r\n        },);\r\n    }\r\n\r\n    addToCart(){\r\n        let item = this.state.item;\r\n        let id = item.id;\r\n        let qty = this.state.qty;\r\n        let name = item.name;\r\n        let price = item.price;\r\n        let size = this.state.selectedSize;\r\n        let img = item.allImages[0];\r\n        if(size !== ''){\r\n            let local = localStorage.getItem('cart');\r\n            local = local === null ? [] : local === \"\" ? [] : JSON.parse(local);\r\n            let toPay = parseFloat(price) * parseInt(this.state.qty);\r\n            let item = {\r\n                id,\r\n                name,\r\n                price,\r\n                qty,\r\n                toPay,\r\n                size,\r\n                img: img\r\n            }\r\n\r\n            this.props.addToCart(item);\r\n            console.log(this.props.cart);\r\n\r\n            if(local.length === 0){\r\n                local.push(item);\r\n                localStorage.setItem('cart', JSON.stringify(local));\r\n            }else{\r\n                if(this.checkCart(id, size, qty, local)){\r\n                    localStorage.setItem('cart', JSON.stringify(local));\r\n                }else{\r\n                    local.push(item);\r\n                    localStorage.setItem('cart', JSON.stringify(local));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkCart(id, size, quantity, cart){\r\n        for(let i = 0; i < cart.length; i++){\r\n            if(cart[i].id === id & cart[i].size === size){\r\n                cart[i].toPay = parseFloat(cart[i].price) * quantity;\r\n                cart[i].qty = quantity;\r\n                return true;\r\n            }else{\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let {item, qty} = this.state;\r\n        let listItem = item.sizes.map((item, index)=>{\r\n            return (\r\n                <div onClick={(e)=>this.onClick(e)} key={index.toString()} className=\"padding-all-10 size-list light-grey-bg margin-right-5\">{item}</div>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"col-5 col-l-12 col-m-12 col-s-12\">\r\n                <div className=\"width-90 width-l-100 width-m-100 width-s-100 float-right\">\r\n                    <div className=\"font-gotham amali-blue font-25 font-m-20\">{item.name}</div><br />\r\n                    <div className=\"font-gothic uppercase light-grey-text font-14\">\r\n                        <span className=\"font-gotham red-text\">free ground shipping</span> On all orders over $125\r\n                    </div><br />\r\n                    <div className=\"font-gotham bold-text amali-blue\">${item.price}</div><br />\r\n                    <div className=\"row\">{listItem}</div><br />\r\n                    <div className=\"row align-items-center\">\r\n                        <div>\r\n                            <i onClick={()=>this.onMinus()} className=\"fas fa-minus-circle shadow amali-blue font-30\"></i>\r\n                        </div>\r\n                        <div className=\"col-2 col-l-4\">\r\n                            <input onChange={(e)=>this.onChange(e)} type=\"text\" name=\"qty\" className=\"num\" value={qty} />\r\n                        </div>\r\n                        <div>\r\n                            <i onClick={()=>this.onPlus()} className=\"fas fa-plus-circle shadow amali-blue font-30\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"width-100 height-5 height-m-1 height-l-1\"></div>\r\n                    <div className=\"font-gotham capitalize green-text center-text\">{this.props.msg}</div><br /><br />\r\n                    <div>\r\n                        <div className=\"addBtn\" onClick={()=>this.addToCart()}>add to bag</div>\r\n                        <div className=\"padding-all-10 blue-border-1 cursor-pointer amali-blue\">\r\n                            <div className=\"center-text font-gotham font-14\">Buy online, free in-store pickup</div>\r\n                            <div className=\"center-text font-10 font-gothic\">Get it today at a store near you</div>\r\n                        </div><br />\r\n                        <NavLink to=\"/checkout\">\r\n                        <div className=\"padding-all-20 red-bg white-text font-gotham uppercase center-text btn cursor-pointer\">\r\n                            <div>checkout <i className=\"fas fa-cart-plus\"></i></div>\r\n                        </div>\r\n                        </NavLink>\r\n                        <br />\r\n                        <NavLink to=\"/\"><div className=\"amali-blue\">Go Back</div></NavLink><br />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductDetails;","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\MyProvider.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Checkout\\Checkout.js",["114"],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\Checkout\\ListItems.js",["115"],"import React, {Component} from 'react';\r\nimport MyContext from '../../MyContext';\r\n\r\nexport default class ListItems extends Component{\r\n\r\n    onMinus(index){\r\n        this.props.onMinus(index);\r\n        let box = document.querySelectorAll('input[type=text].num');\r\n        box[index].value = parseInt(box[index].value) <= 1 ? 1 : parseInt(box[index].value) - 1;\r\n        setTimeout(()=>{\r\n            let cart = this.props.cart;\r\n            localStorage.setItem('cart', JSON.stringify(cart));\r\n        },);\r\n    }\r\n\r\n    onChange(e, index){\r\n        if(e.target.value !== ''){\r\n            setTimeout(()=>{\r\n                let num = '';\r\n                e.target.value.split('').forEach((item, index)=>{\r\n                    num = num + item;\r\n                    if(isNaN(item)){\r\n                        num = num.split('');\r\n                        num.length = num.length > 1 ? num.length - 1 : num.length;\r\n                        if(num.length === 1){\r\n                            e.target.value = 1;\r\n                        }else{\r\n                            let numb = '';\r\n                            num.forEach(item=>{\r\n                                numb = numb + item;\r\n                            });\r\n                            numb = parseInt(numb);\r\n                            e.target.value = numb;\r\n                        }\r\n                    }\r\n                });\r\n                if((parseInt(e.target.value) === 0)){\r\n                    e.target.value = 1;\r\n                    this.props.onChange(e.target.value, index);\r\n                }else{\r\n                    this.props.onChange(e.target.value, index);\r\n                }\r\n            },);\r\n        }else{\r\n            e.target.value = 1;\r\n            this.props.onChange(e.target.value, index);\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            let cart = this.props.cart;\r\n            localStorage.setItem('cart', JSON.stringify(cart));\r\n        },);\r\n        \r\n    }\r\n\r\n    onPlus(index){\r\n        this.props.onPlus(index);\r\n        let box = document.querySelectorAll('input[type=text].num');\r\n        box[index].value = parseInt(box[index].value) + 1;\r\n        setTimeout(()=>{\r\n            let cart = this.props.cart;\r\n            localStorage.setItem('cart', JSON.stringify(cart));\r\n        },);\r\n    }\r\n\r\n    onDiscount(e){\r\n        this.props.onDiscount(e.target.value);\r\n    }\r\n\r\n    removeItem(index){\r\n        let local = localStorage.getItem('cart');\r\n        local = local === null ? [] : JSON.parse(local);\r\n        let copy = local.splice();\r\n        copy.splice(index, 1);\r\n        localStorage.setItem('cart', JSON.stringify(copy));\r\n        this.props.removeItem(index);\r\n    }\r\n\r\n    render(){\r\n        let listItem = this.props.cart.map((item, index)=>{\r\n            return (\r\n                <div key={index.toString()} className=\"row align-items-center card\">\r\n                    <div className=\"col-1 col-l-2 col-m-2 col-s-3\">\r\n                        <div className=\"max-img\">\r\n                            <img src={item.img} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 col-l-6 col-m-10 col-s-9 padding-all-10 font-gotham\">\r\n                        <div className=\"margin-bottom-10 font-13 font-s-12 amali-blue uppercase\">{item.name}</div>\r\n                        <div className=\"font-12 uppercase light-grey-text\">Unit Price: <span className=\"black-text\">${item.price}</span></div>\r\n                        <div className=\"font-12 uppercase light-grey-text\">Size: <span className=\"black-text\">{item.size}</span></div>\r\n                        <div className=\"font-12 uppercase light-grey-text\">Quantity: <span className=\"black-text\">{item.qty}</span></div>\r\n                    </div>\r\n                    <div className=\"col-5 col-l-3 col-m-8 col-s-10\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div>\r\n                                <i onClick={()=>this.onMinus(index)} className=\"fas fa-minus-circle cursor-pointer shadow amali-blue font-30\"></i>\r\n                            </div>\r\n                            <div className=\"col-2 col-l-5 col-m-8 col-s-8\">\r\n                                <input onChange={(e)=>this.onChange(e, index)} type=\"text\" value={item.qty} className=\"num\" />\r\n                            </div>\r\n                            <div>\r\n                                <i onClick={()=>this.onPlus(index)} className=\"fas fa-plus-circle cursor-pointer shadow amali-blue font-30\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-1 col-m-2 col-s-2\">\r\n                        <div><i onClick={()=>this.removeItem(index)} className=\"fas fa-trash-alt red-text font-20\"></i></div>\r\n                    </div>\r\n                    <div className=\"col-12 width-100 height-2\"></div>\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"width-90 margin-auto\">\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col-9 col-l-12 col-m-12 col-s-12\">{listItem}</div>\r\n                    <div className=\"col-3 col-l-12 col-m-12 col-s-12\">\r\n                        <div className=\"width-90 width-l-100 width-m-100 width-s-100 float-right discount-card\">\r\n                            <div className=\"width-100 height-5\"></div>\r\n                            <div className=\"font-gotham font-14 light-grey-text\">Total Items: <span className=\"amali-blue\">{this.props.totalQty}</span></div>\r\n                            <div className=\"font-gotham font-14 light-grey-text\">Total Price to Pay: <span className=\"amali-blue\">${this.props.totalPrice}</span></div><br />\r\n                            <div className=\"font-gotham\">Discount Code</div>\r\n                            <div><input placeholder=\"enter discount code here\" type=\"text\" maxLength=\"5\" name=\"discount\" className=\"discount\" value={this.props.discount} onChange={(e)=>this.onDiscount(e)} /></div>\r\n                            <div className=\"width-100 height-5\"></div>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"width-100 height-10\"></div>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\TopNav.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\Nav.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\components\\General\\BottomNav.js",[],"C:\\Users\\Mustapha Botchway\\Documents\\Web Development\\React-Challenge\\amalitech\\src\\MyContext.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":6,"column":14,"nodeType":"124","messageId":"125","endLine":6,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":18,"column":52,"nodeType":"128","messageId":"129","endLine":18,"endColumn":54},{"ruleId":"116","replacedBy":"130"},{"ruleId":"118","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":25,"column":31,"nodeType":"134","endLine":25,"endColumn":41},{"ruleId":"132","severity":1,"message":"133","line":29,"column":80,"nodeType":"134","endLine":29,"endColumn":90},{"ruleId":"135","severity":1,"message":"136","line":7,"column":5,"nodeType":"137","messageId":"138","endLine":9,"endColumn":6},{"ruleId":"122","severity":1,"message":"139","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":17},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],"no-unused-vars","'onClickItem' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["140"],["141"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'MyContext' is defined but never used.","no-global-assign","no-unsafe-negation"]